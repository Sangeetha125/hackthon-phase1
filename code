import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, accuracy_score

# Load dataset
df = pd.read_csv('/mnt/data/Predictive Hiring and Talent Management.csv')

# Drop columns that may not add value (like candidate name or ID if present)
# No such column here, so we proceed

# Encode categorical variables
label_cols = ['Gender', 'Education Level', 'Job Role', 'Industry', 'Current Job Title',
              'Income Level', 'Location', 'AI Upskilling Type']

le = LabelEncoder()
for col in label_cols:
    df[col] = le.fit_transform(df[col])

# Define features and target
X = df.drop(columns=['Success in Hiring Process'])
y = df['Success in Hiring Process']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model training
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Evaluation
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
